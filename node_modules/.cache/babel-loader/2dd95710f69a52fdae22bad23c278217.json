{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\Statistic\\\\Statistic.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Statistic extends Component {\n  // const {good, neutral, bad} = this.props;\n  // incrementValue = (event) => {\n  //     console.log('event')\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"neutral\",\n        children: \" Neutral \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"bad\",\n        children: \" Bad \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Statistic \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n} //","map":{"version":3,"sources":["C:/Users/Alex/Desktop/goit-react-hw-02-feedback/src/components/Statistic/Statistic.jsx"],"names":["Component","Statistic","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAGrC;AAEA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACT,wBACI;AAAA,8BAEA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,oBADJ;AAaC;;AAvBoC,C,CA2BrC","sourcesContent":["import { Component } from \"react\";\r\n\r\nexport class Statistic extends Component {\r\n    \r\n   \r\n    // const {good, neutral, bad} = this.props;\r\n\r\n    // incrementValue = (event) => {\r\n    //     console.log('event')\r\n    // }\r\n\r\n    render (){\r\n    return (\r\n        <>\r\n        {/* <button type=\"submit\" name=\"good\" onClick={ () => this.incrementValue() }> Good </button> */}\r\n        <button type=\"submit\" name=\"neutral\"> Neutral </button>\r\n        <button type=\"submit\" name=\"bad\"> Bad </button>\r\n\r\n        <h2> Statistic </h2>\r\n\r\n        {/* <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Neutral: {bad}</p> */}\r\n        </>\r\n    ); \r\n    }\r\n}\r\n\r\n\r\n    //"]},"metadata":{},"sourceType":"module"}