{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\phonebook\\\\src\\\\components\\\\ToDoList\\\\ToDoList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDoList = _ref => {\n  let {\n    filter,\n    data,\n    deleteToDo,\n    filteredContacts\n  } = _ref;\n\n  if (filter) {} else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(_ref2 => {\n        let {\n          name,\n          number,\n          id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [name, \" \", number, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => deleteToDo(id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  }\n};\n_c = ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/Alex/Desktop/phonebook/src/components/ToDoList/ToDoList.jsx"],"names":["ToDoList","filter","data","deleteToDo","filteredContacts","map","name","number","id"],"mappings":";;AAAA,OAAO,MAAMA,QAAQ,GAAG,QAAoD;AAAA,MAAnD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,GAAmD;;AAG5E,MAAIH,MAAJ,EAAW,CAEV,CAFD,MAEO;AAEL,wBACE;AAAA,gBACGC,IAAI,CAACG,GAAL,CAAS;AAAA,YAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,MAAR;AAAgBC,UAAAA;AAAhB,SAAD;AAAA,4BACR;AAAA,qBACKF,IADL,OACYC,MADZ,eAEE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMJ,UAAU,CAACK,EAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASA,EAAT;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA,OAAT;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWG;AACJ,CAnBM;KAAMR,Q","sourcesContent":["export const ToDoList = ({ filter, data, deleteToDo, filteredContacts }) => {\r\n\r\n\r\nif (filter){\r\n\r\n} else {\r\n\r\n  return (\r\n    <ul>\r\n      {data.map(({ name, number ,id }) => (\r\n        <li key={id}>\r\n            {name} {number} \r\n          <button type=\"button\" onClick={() => deleteToDo(id)}>delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    \r\n  );\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}