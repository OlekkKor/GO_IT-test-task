{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from 'react';\nimport { Statistic } from './Statistic/Statistic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.incrementValue = e => {\n      e.preventDefault();\n      console.log(e.target.name);\n\n      if (e.target.name === 'good') {\n        this.setState(prevState => {\n          return {\n            good: prevState.good + 1\n          };\n        });\n      }\n\n      if (e.target.name === 'neutral') {\n        this.setState(prevState => {\n          return {\n            neutral: prevState.neutral + 1\n          };\n        });\n      }\n\n      if (e.target.name === 'bad') {\n        this.setState(prevState => {\n          return {\n            bad: prevState.bad + 1\n          };\n        });\n      }\n    };\n\n    this.countTotalFeedback = () => {\n      return this.props.good + this.props.neutral + this.props.bad; // this.setState(prevState => {\n      //   console.log(prevState.good)\n      //   console.log('hi')\n      // })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Please leave your feedback \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        good: this.state.good,\n        neutral: this.state.neutral,\n        bad: this.state.bad,\n        total: this.countTotalFeedback,\n        incrementValue: this.incrementValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","Statistic","App","state","good","neutral","bad","incrementValue","e","preventDefault","console","log","target","name","setState","prevState","countTotalFeedback","props","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAGA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAFwB;;AAAA,SAShCC,cATgC,GASdC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,IAArB;;AAEA,UAAIL,CAAC,CAACI,MAAF,CAASC,IAAT,KAAkB,MAAtB,EAA6B;AAC3B,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,iBAAO;AAAEX,YAAAA,IAAI,EAAEW,SAAS,CAACX,IAAV,GAAiB;AAAzB,WAAP;AACD,SAFD;AAGD;;AAED,UAAII,CAAC,CAACI,MAAF,CAASC,IAAT,KAAkB,SAAtB,EAAgC;AAC9B,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,iBAAO;AAAEV,YAAAA,OAAO,EAAEU,SAAS,CAACV,OAAV,GAAoB;AAA/B,WAAP;AACD,SAFD;AAGD;;AAED,UAAIG,CAAC,CAACI,MAAF,CAASC,IAAT,KAAkB,KAAtB,EAA4B;AAC1B,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,iBAAO;AAAET,YAAAA,GAAG,EAAES,SAAS,CAACT,GAAV,GAAgB;AAAvB,WAAP;AACD,SAFD;AAGD;AACF,KA/B+B;;AAAA,SAiChCU,kBAjCgC,GAiCX,MAAM;AACzB,aAAO,KAAKC,KAAL,CAAWb,IAAX,GAAkB,KAAKa,KAAL,CAAWZ,OAA7B,GAAuC,KAAKY,KAAL,CAAWX,GAAzD,CADyB,CAGzB;AACA;AACA;AACF;AACC,KAxC+B;AAAA;;AA2ChCY,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,SAAD;AACE,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,QAAA,KAAK,EAAE,KAAKU,kBAJd;AAKE,QAAA,cAAc,EAAE,KAAKT;AALvB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAYD;;AAxD+B","sourcesContent":["import { Component } from 'react';\r\nimport { Statistic } from './Statistic/Statistic';\r\n\r\n\r\nexport class App extends Component{\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n\r\n  incrementValue = (e) => {\r\n    e.preventDefault()\r\n\r\n    console.log(e.target.name);\r\n\r\n    if (e.target.name === 'good'){\r\n      this.setState(prevState => {\r\n        return { good: prevState.good + 1 };\r\n      });\r\n    }\r\n    \r\n    if (e.target.name === 'neutral'){\r\n      this.setState(prevState => {\r\n        return { neutral: prevState.neutral + 1 };\r\n      });\r\n    }\r\n\r\n    if (e.target.name === 'bad'){\r\n      this.setState(prevState => {\r\n        return { bad: prevState.bad + 1 };\r\n      });\r\n    }\r\n  }\r\n    \r\n  countTotalFeedback = () => {\r\n    return this.props.good + this.props.neutral + this.props.bad;\r\n\r\n    // this.setState(prevState => {\r\n    //   console.log(prevState.good)\r\n    //   console.log('hi')\r\n  // })\r\n  }\r\n\r\n  \r\n  render () { \r\n    return (\r\n      <>\r\n      <h1> Please leave your feedback </h1>\r\n      <Statistic \r\n        good={this.state.good} \r\n        neutral={this.state.neutral} \r\n        bad={this.state.bad} \r\n        total={this.countTotalFeedback}\r\n        incrementValue={this.incrementValue}/>\r\n      \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}